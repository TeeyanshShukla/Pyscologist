PYSCOLOGIST FRONTEND README

────────────────────────────────────────────────────────
PROJECT OVERVIEW
────────────────────────────────────────────────────────
This is the “Pyscologist” frontend: a Next.js application generated with Vercel’s v0 AI UI builder and styled with Tailwind CSS. It includes:
· Landing page with HeroHeader component
· Chat interface at route /chat
· Crisis support screen at /crisis
· Session history dashboard at /sessions
· UI primitives under components/ui/ for buttons, cards, inputs, etc.

────────────────────────────────────────────────────────
GETTING STARTED
────────────────────────────────────────────────────────

Clone the repository and change into the frontend folder:
git clone <REPO_URL> pyscologist-frontend
cd pyscologist-frontend

Install dependencies:
npm install

Run the development server:
npm run dev
Open http://localhost:3000 to view.

Build for production:
npm run build
npm start

────────────────────────────────────────────────────────
PROJECT STRUCTURE
────────────────────────────────────────────────────────
pyscologist-frontend/
app/
layout.tsx Root layout loads globals.css and metadata
page.tsx Landing page with HeroHeader and navigation
chat/page.tsx Main chat UI
crisis/page.tsx Crisis support UI
sessions/page.tsx Session history UI
components/
hero-header.tsx Landing page hero component
crisis-actions.tsx Crisis support buttons
breathing-exercise.tsx Guided breathing widget
resources-panel.tsx Self-help resources
floating-controls.tsx Chat control buttons
filters.tsx Session filter controls
emotions-chart.tsx Mood visualization
timeline-item.tsx Session timeline entry
notes-card.tsx Private notes UI
export-controls.tsx Export history interface
components/ui/ Shadcn/Tailwind UI primitives
public/ Static assets (images, SVGs)
styles/
globals.css Tailwind base and overrides
tailwind.config.js Tailwind theme and plugin config
package.json Project dependencies and scripts
README.txt This file

────────────────────────────────────────────────────────
DEPENDENCIES
────────────────────────────────────────────────────────
Core:
next (v15.x), react, react-dom
tailwindcss
@shadcn/ui or lucide-react for UI primitives
@radix-ui/react-dialog, @radix-ui/react-tooltip
clsx, class-variance-authority, tailwind-merge
recharts for charts

See package.json for full list and versions.

────────────────────────────────────────────────────────
AVAILABLE SCRIPTS
────────────────────────────────────────────────────────
npm run dev Start development server with hot reload
npm run build Build for production
npm start Run production build
npm run lint Run ESLint
npm run format Run Prettier (if configured)

────────────────────────────────────────────────────────
STYLING & THEMING
────────────────────────────────────────────────────────

Tailwind config extends theme colors (primary gold, deep blue, sage green)

Dark mode enabled via media strategy; use dark: utilities

Global styles in globals.css; custom utilities via arbitrary values

────────────────────────────────────────────────────────
ADDING OR UPDATING COMPONENTS
────────────────────────────────────────────────────────
Via v0:

In v0 UI, export component with npx v0 add <component-id> --overwrite

Install any new dependencies

Restart dev server (npm run dev)

Manual:

Copy code from v0 UI

Replace local file under components/

Run npm install if new packages introduced

Restart dev server

────────────────────────────────────────────────────────
CONTRIBUTING
────────────────────────────────────────────────────────

Create a feature branch:
git checkout -b frontend/feature-name

Make and test changes locally.

Commit changes with clear message:
git add .
git commit -m "feat: description"

Push branch and open a Pull Request against main.